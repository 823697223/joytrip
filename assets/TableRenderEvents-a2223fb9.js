import{c as o,b as c,M as t,p as d,U as l,_ as a}from"./framework-fce7c3d2.js";const s=o({__name:"TableRenderEvents",setup(r){const e=c([{name:"select",desc:"当用户手动勾选数据行的 Checkbox 时触发的事件",type:"(selection, row) => void"},{name:"select-all",desc:"当用户手动勾选全选 Checkbox 时触发的事件",type:"(selection) => void"},{name:"selection-change",desc:"当选择项发生变化时会触发该事件",type:"(selection) => void"},{name:"cell-mouse-enter",desc:"当单元格 hover 进入时会触发该事件",type:"(row, column, cell, event) => void"},{name:"cell-mouse-leave	",desc:"当单元格 hover 退出时会触发该事件",type:"(row, column, cell, event) => void"},{name:"cell-click",desc:"当某个单元格被点击时会触发该事件",type:"(row, column, cell, event) => void"},{name:"cell-dblclick",desc:"当某个单元格被双击击时会触发该事件",type:"(row, column, cell, event) => void"},{name:"cell-contextmenu",desc:"当某个单元格被鼠标右键点击时会触发该事件",type:"(row, column, cell, event) => void"},{name:"row-click",desc:"当某一行被点击时会触发该事件",type:"(row, column, event) => void"},{name:"row-contextmenu",desc:"当某一行被鼠标右键点击时会触发该事件",type:"(row, column, event) => void"},{name:"row-dblclick",desc:"当某一行被双击时会触发该事件",type:"(row, column, event) => void"},{name:"header-click",desc:"当某一列的表头被点击时会触发该事件",type:"(column, event) => void"},{name:"header-contextmenu",desc:"当某一列的表头被鼠标右键点击时触发该事件",type:"(column, event) => void"},{name:"sort-change",desc:"当表格的排序条件发生变化的时候会触发该事件",type:"({ column, prop, order }) => void"},{name:"filter-change",desc:"column 的 key， 如果需要使用 filter-change 事件，则需要此属性标识是哪个 column 的筛选条件",type:"(filters) => void"},{name:"current-change",desc:"当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的 highlight-current-row 属性",type:"(currentRow, oldCurrentRow) => void"},{name:"header-dragend",desc:"当拖动表头改变了列的宽度的时候会触发该事件",type:"(newWidth, oldWidth, column, event) => void"},{name:"expand-change",desc:"当用户对某一行展开或者关闭的时候会触发该事件（展开行时，回调的第二个参数为 expandedRows；树形表格时第二参数为 expanded）",type:"(row, (expandedRows | expanded)) => void"},{name:"onAdd",desc:"点击添加数据按钮事件",type:"() => void"},{name:"onAddAfter",desc:"添加数据之后事件",type:"(row: T) => void"},{name:"onEdit",desc:"编辑行事件",type:"(row: T) => void"},{name:"onCancelEdit",desc:"编辑取消行事件",type:"(row: T) => void"},{name:"onSave",desc:"保存行事件",type:"(row: T) => void"},{name:"onDel",desc:"删除行事件",type:"() => void"}]);return(m,i)=>{const n=t("EventTable");return d(),l(n,{columns:e},null,8,["columns"])}}}),p=a(s,[["__file","TableRenderEvents.vue"]]);export{p as default};
