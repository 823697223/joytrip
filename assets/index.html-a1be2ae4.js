import{_ as n,p as s,q as a,a1 as e}from"./framework-fce7c3d2.js";const t={},o=e(`<h1 id="useconditiontime" tabindex="-1"><a class="header-anchor" href="#useconditiontime" aria-hidden="true">#</a> UseConditionTime</h1><p>把对象中的<code>time</code>字段分解成<code>startTime</code>和<code>endTime</code>，并删除<code>time</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">declare</span> global <span class="token punctuation">{</span>
	<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ConditionTime</span> <span class="token punctuation">{</span>
		time<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
		startTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
		endTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useConditionTime</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> ConditionTime<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>condition<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>example</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> condition <span class="token operator">=</span> <span class="token punctuation">{</span>
	time<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;2023-04-04 00:00:00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-04 23:59:59&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token function">useConditionTime</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token comment">// =&gt; {startTime: &#39;2023-04-04 00:00:00&#39;, endTime: &#39;2023-04-04 23:59:59&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),p=[o];function i(c,l){return s(),a("div",null,p)}const r=n(t,[["render",i],["__file","index.html.vue"]]);export{r as default};
